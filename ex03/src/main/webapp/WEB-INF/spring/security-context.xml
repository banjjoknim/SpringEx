<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
		
		<!-- CustomAccessDeniedHandler 클래스를 빈으로 처리 -->
		<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean> 
		<!-- <bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean> -->
		<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean> -->
		<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
		<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean>

	<security:http auto-config="true" use-expressions="true">

		<security:intercept-url pattern="/smaple/all" access="permitAll" />

		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />

		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />

		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
        <!-- 로그인 화면 처리 -->
		<!-- <security:form-login /> --> 
		<!-- <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/> -->
		
		<security:form-login login-page="/customLogin"/>
		
		<!-- <security:csrf disabled="true"/> -->
		<!-- <security:logout logout-url="/customLogout" invalidate-session="true"/> -->
		
		<security:remember-me 
		data-source-ref="dataSource" token-validity-seconds="604800"/>
		
		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/>

	</security:http>

	<security:authentication-manager> <!-- 인증과 권한에 대한 처리, UserDetailsService -->

		<security:authentication-provider user-service-ref="customUserDetailsService"> <!-- user-service-ref="customUserDetailsService"만 추가하면 서버 안됨. -->
		
			<!-- <security:user-service> //임시 유저 설정
				<security:user name="member" password="{noop}member"
					authorities="ROLE_MEMBER" />
				<security:user name="admin" password="{noop}admin"
					authorities="ROLE_MEMBER, ROLE_ADMIN" />
			</security:user-service> -->
			
			<!-- <security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select userid, userpw, enabled from tbl_member where userid = ?"
			authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ?"/> -->
			
			<security:password-encoder ref="bcryptPasswordEncoder"/>
			<!-- change to Bcrypt -->
			<!-- <security:password-encoder ref="customPasswordEncoder"/> -->
			
		</security:authentication-provider>
		

	</security:authentication-manager>




</beans>
